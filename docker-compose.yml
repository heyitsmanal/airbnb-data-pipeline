version: "3.9"

x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE}
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@${AIRFLOW_DB_HOST}:${AIRFLOW_DB_PORT}/${AIRFLOW_DB_NAME}
    _PIP_ADDITIONAL_REQUIREMENTS: "pandas==2.1.4 sqlalchemy==1.4.52 psycopg2-binary==2.9.9 pyarrow==16.1.0 requests==2.31.0"
    EXTERNAL_CSV_URL: ${EXTERNAL_CSV_URL}
    WAREHOUSE_CONN_STR: postgresql+psycopg2://$WAREHOUSE_DB_USER:$WAREHOUSE_DB_PASSWORD@warehouse-db:5432/$WAREHOUSE_DB_NAME
  volumes:
    - ./dags:/opt/airflow/dags
    - ./scripts:/opt/airflow/scripts
    - ./data:/opt/airflow/data
    - ./airflow/logs:/opt/airflow/logs
    - ./sql:/opt/airflow/sql
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  depends_on:
    - airflow-db
    - warehouse-db

services:
  airflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    ports:
      - "${AIRFLOW_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_DB_USER} -d ${AIRFLOW_DB_NAME}"]
      interval: 5s
      retries: 5
    volumes:
      - airflow-db-data:/var/lib/postgresql/data

  warehouse-db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${WAREHOUSE_DB_USER}
      POSTGRES_PASSWORD: ${WAREHOUSE_DB_PASSWORD}
      POSTGRES_DB: ${WAREHOUSE_DB_NAME}
    ports:
      - "${WAREHOUSE_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${WAREHOUSE_DB_USER} -d ${WAREHOUSE_DB_NAME}"]
      interval: 5s
      retries: 5
    volumes:
      - warehouse-db-data:/var/lib/postgresql/data
      - ./sql/init_warehouse.sql:/docker-entrypoint-initdb.d/init_warehouse.sql

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "airflow db migrate && airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin || true"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

volumes:
  airflow-db-data:
  warehouse-db-data:
